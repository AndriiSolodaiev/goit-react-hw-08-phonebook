{"version":3,"file":"static/js/127.3a0534d6.chunk.js","mappings":"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","sources":["components/ContactList/ContactItem/ContactList.styled.js","components/ContactList/ContactItem/ContactItem.jsx","redux/contacts/selectors.js","components/ContactList/ContactList.jsx","components/Form/Form.styled.js","components/Filter/Filter.jsx","components/Form/Form.jsx","pages/ContactsPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Li = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 5px 20px;\n  margin-bottom: 10px;\n  width: 400px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  transition: transform 250ms ease;\n\n  :focus,\n  :hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const DeleteButton = styled.button`\n  background-color: orangered;\n  border-radius: 8px;\n  color: white;\n  opacity: 0.5;\n  transition: opacity 250ms ease, transform 250ms ease;\n  &:hover {\n    opacity: 1;\n    transform: scale(1.05);\n  }\n`;\n\nexport const StyledSpan = styled.span`\n  font-weight: ${prop => prop.weight};\n`;\n","import { Li, DeleteButton, StyledSpan } from './ContactList.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport function ContactItem({ contact }) {\n  const dispatch = useDispatch();\n\n  return (\n    <Li>\n      <div>\n        <StyledSpan weight=\"500\">{contact.name}: </StyledSpan>\n        <StyledSpan weight=\"200\">{contact.number}</StyledSpan>\n      </div>\n      <DeleteButton\n        type=\"button\"\n        onClick={() => dispatch(deleteContact(contact.id))}\n      >\n        Delete\n      </DeleteButton>\n    </Li>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { ContactItem } from './ContactItem';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nexport function ContactList() {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  return (\n    <ul>\n      {visibleContacts.map(contact => (\n        <ContactItem key={contact.id} contact={contact} />\n      ))}\n    </ul>\n  );\n}\n","import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 400px;\n  border-radius: 10px;\n  background-color: teal;\n  padding: 20px;\n`;\n\nexport const Label = styled.label`\n  text-align: center;\n  border-radius: 8px;\n  background-color: lightgray;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 15px;\n  width: fit-content;\n  padding: 5px 0;\n`;\n\nexport const Input = styled.input`\n  padding: 10px 20px;\n  width: 200px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  transition: border-color 250ms ease;\n\n  :focus {\n    outline: none;\n    border-color: blue;\n  }\n`;\n\nexport const ButtonAddContacts = styled.button`\n  padding: 5px 10px;\n  border-radius: 8px;\n  border: none;\n  transition: all 250ms ease;\n  &:hover,\n  :focus {\n    background-color: lightgreen;\n    transform: scale(1.05);\n  }\n`;\n","import { Label, Input } from 'components/Form/Form.styled';\nimport { FaFilter } from 'react-icons/fa';\n// import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/filterSlice';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n  const onChange = evt => {\n    dispatch(filterContacts(evt.target.value));\n  };\n  return (\n    <Label>\n      Find contacts by name <FaFilter />\n      <Input type=\"text\" onChange={onChange} />\n    </Label>\n  );\n}\n","import { useState } from 'react';\nimport { Label, Input, FormStyled, ButtonAddContacts } from './Form.styled';\n// import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  const handleNameChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      setName('');\n    } else {\n      dispatch(addContact({ name, number }));\n      reset();\n    }\n  };\n\n  return (\n    <FormStyled onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          placeholder=\"Enter name\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleNameChange}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          placeholder=\"Enter number\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleNameChange}\n        />\n      </Label>\n      <ButtonAddContacts type=\"submit\">Add contact</ButtonAddContacts>\n    </FormStyled>\n  );\n};\n\n// Form.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       name: PropTypes.string.isRequired,\n//     })\n//   ).isRequired,\n// };\n","import { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport { Form } from 'components/Form';\nimport { AiFillPhone } from 'react-icons/ai';\nimport { IoMdContacts } from 'react-icons/io';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <div>\n        <PageTitle>\n          Phonebook <AiFillPhone />\n        </PageTitle>\n        <Form />\n      </div>\n      <ContactListWrapper>\n        <h2>\n          Contacts <IoMdContacts />\n        </h2>\n        <Filter />\n\n        {isLoading && !error && <p>Loading...</p>}\n        <ContactList />\n      </ContactListWrapper>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n\nconst PageTitle = styled.h2`\n  margin-bottom: 30px;\n  text-align: center;\n  font-size: 40px;\n`;\n\nconst ContactListWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  margin-top: 40px;\n  gap: 20px;\n`;\n"],"names":["Li","styled","DeleteButton","StyledSpan","prop","weight","ContactItem","contact","dispatch","useDispatch","name","number","type","onClick","deleteContact","id","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","toLowerCase","includes","ContactList","visibleContacts","useSelector","map","FormStyled","Label","Input","ButtonAddContacts","Filter","onChange","evt","filterContacts","target","value","Form","useState","setName","setNumber","handleNameChange","event","currentTarget","onSubmit","preventDefault","find","alert","addContact","placeholder","pattern","title","required","useEffect","fetchContacts","PageTitle","ContactListWrapper"],"sourceRoot":""}